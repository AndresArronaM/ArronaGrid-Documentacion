{"version":3,"sources":["node_modules/@andresarronamontoya/arronagrid/sass/_base.scss","node_modules/@andresarronamontoya/arronagrid/sass/_core.scss","node_modules/@andresarronamontoya/arronagrid/sass/_flexbox.scss","node_modules/@andresarronamontoya/arronagrid/ArronaGrid.scss","node_modules/@andresarronamontoya/arronagrid/sass/_helps.scss","node_modules/@andresarronamontoya/arronagrid/sass/_buttons.scss","node_modules/@andresarronamontoya/arronagrid/sass/_mediaQuery.scss","node_modules/@andresarronamontoya/arronagrid/sass/_grid.scss","Style.scss"],"names":[],"mappings":"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","file":"Style.css","sourcesContent":["*,*:before,*:after{\n    box-sizing:border-box;\n    margin: 0;\n    text-size-adjust:100%;\n    overflow: hidden;\n}\n\nimg{\n    min-width: 100%;\n    height: auto;\n}\n\na{\n    text-decoration: none;\n    &:hover{\n        text-decoration: underline;\n    }\n}\n","/// Mixin para determinar el modelo de Layout.\n/// @group   Layout\n/// @require {boolean} $Display\n/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]\n///\n/// @example scss\n///\n/// .container{\n///     @include Layout(flex);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     display: -ms-flexbox;\n///     display: flex;\n///     -ms-flex-wrap: wrap;\n///     flex-wrap: wrap;\n/// }\n\n\n\n@mixin Layout($Display){\n    @if $Display == flex{\n        display     : flex;\n        @include wrap(w);\n    }@else if $Display == grid{\n        display     : grid;\n    }@else{\n        @warn \"Error valor no permitido\";\n    }\n}\n\n@mixin LayoutCss($Display){\n    .#{$nameSpace}-layout-#{$Display}{\n        @include Layout($Display);\n    }\n}\n\n/// Mixin para la creacion de un ag-container.\n/// @group   Layout\n/// @require {boolean} $Display\n/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]\n///\n/// @example scss\n///\n/// .container{\n///     @include container(flex);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     max-width: 1200px;\n///     margin-left: auto;\n///     margin-right: auto;\n///     width: 100%;\n///     display: -ms-flexbox;\n///     display: flex;\n///     -ms-flex-wrap: wrap;\n///     flex-wrap: wrap;\n/// }\n///\n\n\n@mixin container($Display){\n    max-width       : $Max-Width;\n    margin-left     : auto      ;\n    margin-right    : auto      ;\n    width           : 100%      ;\n    @include Layout($Display)   ;\n}\n\n@mixin containerCss($Display){\n    .#{$Container}-#{$Display}{\n        @include container($Display);\n    }\n}\n\n\n","/// Mapa de variables para el mixin direccion()\n/// @group   Flexbox\n\n$FlexDirection:(\n    c   :   column,\n    cr  :   column-reverse,\n    r   :   row,\n    rr  :   row-reverse\n) !default;\n\n/// Mixin para determinar la direccion de los items\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Direccion\n/// @param   {map} $Direccion - Variable para optener un valor del mapa $FlexDirection\n/// @example scss\n///\n/// .container{\n///     @include direccion(c);\n/// }\n///\n/// @example css\n///\n/// .container{\n///    -ms-flex-direction: column;\n///    flex-direction: column;\n/// }\n\n@mixin direccion($Direccion){\n    @if map-has-key($FlexDirection,$Direccion){\n        flex-direction:#{map-get($FlexDirection,$Direccion)};\n    }\n}\n\n@mixin direccionCss($Direccion,$Breackpoint){\n    @if map-has-key($FlexDirection,$Direccion){\n        @include MediaQuery($Breackpoint){\n            .#{$Breackpoint}-flex-#{$Direccion}{\n                flex-direction:#{map-get($FlexDirection,$Direccion)};\n            }\n        }\n    }\n}\n\n/// Mapa de variables para el mixin wrap()\n/// @group   Flexbox\n\n$FlexWrap:(\n    w   :wrap,\n    wr  :wrap-reverse,\n    nw  :nowrap\n) !default;\n\n/// Mixin para determinar si los items estaran en una linea o no\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Wrap\n/// @param   {map} $Wrap - Variable para optener un valor del mapa $FlexWrap\n/// @example scss\n///\n/// .container{\n///     @include wrap(w);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-flex-wrap:wrap-reverse;\n///     flex-wrap:wrap-reverse\n/// }\n\n@mixin wrap($Wrap){\n    @if map-has-key($FlexWrap,$Wrap){\n        flex-wrap:#{map-get($FlexWrap,$Wrap)};\n    }\n}\n\n@mixin wrapCss($Wrap,$Breackpoint){\n    @if map-has-key($FlexWrap,$Wrap){\n        @include MediaQuery($Breackpoint){\n            .#{$Breackpoint}-flex-#{$Wrap}{\n                flex-wrap:#{map-get($FlexWrap,$Wrap)};\n            }\n        }\n    }\n}\n\n/// Mapa de variables para el mixin Align()\n/// @group   Flexbox\n\n$FlexAlign :(\n    Justify     :space-between,\n    Distribute  :space-around,\n    Start       :flex-start,\n    Center      :center,\n    End         :flex-end\n)!default;\n\n/// Mapa de variables para el mixin Align()\n/// @group   Flexbox\n\n$FlexAxis :(\n    cross   :cross,  //Si los items se alinearan al eje cross\n    main    :main,   //Si los items se alinearan al eje main\n    axis    :flex    //Si los items se alinearan en los 2 ejes\n)!default;\n\n/// Mixin para la alineacion de los items en el main axis o cross axis\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Wrap\n/// @param   {map} $Axis  - Variable para optener un valor del mapa $FlexAxis\n/// @param   {map} $Align - Variable para optener un valor del mapa $FlexAlign\n/// @example scss\n///\n/// .container{\n///     @include Align(cross,Justify);\n/// }\n///\n/// @example css\n///\n/// .container{\n///   -ms-flex-pack: justify;\n///   justify-content: space-between;\n/// }\n\n@mixin Align($Axis,$Align){\n    @if map-has-key($FlexAxis,$Axis){\n        @if $Axis == main{\n            @if map-has-key($FlexAlign,$Align){\n                justify-content:#{map-get($FlexAlign,$Align)};\n            }\n        }@else if $Axis == cross{\n            @if map-has-key($FlexAlign,$Align){\n                @if $Align == Start or $Align == Center or $Align == End{\n                    align-items:#{map-get($FlexAlign,$Align)};\n                    align-content:#{map-get($FlexAlign,$Align)};\n                }@else{\n                    @warn \"Error valor no permitido\";\n                }\n            }\n        }@else if $Axis == axis{\n            @warn \"Valor no valido para la version sass\";\n        }\n    }\n}\n\n@mixin AlignCss($Axis,$Align,$Breackpoint){\n    @if map-has-key($FlexAxis,$Axis){\n        @if $Axis == main{\n            @if map-has-key($FlexAlign,$Align){\n                @include MediaQuery($Breackpoint){\n                    .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                        justify-content:#{map-get($FlexAlign,$Align)};\n                    }\n                }\n            }\n        }@else if $Axis == cross{\n            @if map-has-key($FlexAxis,$Axis){\n                @include MediaQuery($Breackpoint){\n                    @if $Align == Start or $Align == Center or $Align == End{\n                        .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                            align-items:#{map-get($FlexAlign,$Align)};\n                            align-content:#{map-get($FlexAlign,$Align)};\n                        }\n                    }@else{\n                        @warn \"Error valor no permitido\";\n                    }\n                }\n            }\n        }@else if $Axis == axis{\n            @if map-has-key($FlexAlign,$Align){\n                @include MediaQuery($Breackpoint){\n                    @if $Align == Center{\n                        .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                            justify-content:#{map-get($FlexAlign,$Align)};\n                            align-items:#{map-get($FlexAlign,$Align)};\n                            align-content:#{map-get($FlexAlign,$Align)};\n                            text-align:center;\n                        }\n                    }@else{\n                        @warn \"Error valor no permitido\";\n                    }\n                }\n            }\n        }\n    }\n}\n","/// ArronaGrid es una libreria sass para la maquetacion de sitios web contruida con la especificacion css flexbox\r\n/// Importe el achivo ArronaGrid.scss en su proyecto para empezar usarlo\r\n\r\n/// Compila todo el core correspondiente.\r\n/// Acepta 2 valores sass(por defecto y recomendado) y css.\r\n/// @group Variables Globales\r\n\r\n$Core   :css !default;\r\n\r\n/// Soporte para caracteristicas css.\r\n/// Acepta 3 valores all(por defecto), grid, beta.\r\n/// @group Variables Globales\r\n\r\n$Version :all !default;\r\n\r\n/// Selectores para el container y el item\r\n/// puedes modificarlos de acuerdo a las necesidaes del tu proyecto\r\n/// @group Variables Globales\r\n\r\n$nameSpace  : ag                       !default;\r\n$Container  : #{$nameSpace}-container  !default;\r\n$Item       : #{$nameSpace}-item       !default;\r\n\r\n/// Ancho maximo para los contenedores\r\n/// @group   Layout\r\n\r\n$Max-Width  : 1200px    !default;\r\n\r\n/// Variable para sobreescribir la propiedad max-width en base al viewport\r\n/// @group   Layout\r\n\r\n$FullLayout       : 100vh     !default;\r\n\r\n/// Variable para sobreescribir la propiedad max-width en base a un contenedor\r\n/// @group   Layout\r\n\r\n$Full             : 100%      !default;\r\n\r\n/// Variables para la creacion de una rejilla\r\n/// @group Grid\r\n\r\n$Column:12;\r\n\r\n/// Separacion entre los items\r\n/// @group Variables Globales\r\n\r\n$Gap       :1rem !default;\r\n\r\n/// Mapa de variables para el mixin MediaQuery()\r\n/// @group Layout\r\n\r\n$Breackpoints : (\r\n    xs: 240px,\r\n    s:  320px,\r\n    m:  480px,\r\n    st: 600px,\r\n    t:  768px,\r\n    l:  1024px,\r\n    xl: 1200px\r\n)   !default;\r\n\r\n@import \"sass/base.scss\";\r\n@import \"sass/buttons.scss\";\r\n@import \"sass/mediaQuery.scss\";\r\n@import \"sass/flexbox.scss\";\r\n@import \"sass/grid.scss\";\r\n@import \"sass/core.scss\";\r\n@import \"sass/helps.scss\";\r\n@import \"sass/corecss.scss\";\r\n","@mixin fullLayoutCss{\n    .Full-Layout{\n        max-width:$FullLayout;\n    }\n}\n\n@mixin fullCss{\n    .Full{\n        max-width:$Full;\n    }\n}\n","/// Mixin para la creacion de un ag-button.\n/// @group Bottons\n/// @require {number} $Gap\n/// @param   {number} $Gap[1rem] - Separacion entre elementos\n///\n/// @example scss\n///\n/// .button{\n///     @include button($Gap);\n/// }\n///\n/// @example css\n///\n/// .button{\n///    display         : inline-block  ;\n///    padding         : .8em 1.4em    ;\n///    cursor          : pointer       ;\n///    border          : none          ;\n///    text-decoration : none          ;\n///    margin-right    : 1rem          ;\n///    margin-left     : 1rem          ;\n/// }\n\n@mixin button($Gap) {\n    display         : inline-block  ;\n    padding         : .8em 1.4em    ;\n    cursor          : pointer       ;\n    border          : none          ;\n    text-decoration : none          ;\n    margin-right    : $Gap          ;\n    margin-left     : $Gap          ;\n}\n\n/// Mixin para redondear los bordes de un ag-button.\n/// @group Bottons\n///\n/// @example scss\n///\n/// .button{\n///     @include button($Gap);\n///     @include radius;\n/// }\n///\n/// @example css\n///\n/// .button{\n///    display         : inline-block  ;\n///    padding         : .8em 1.4em    ;\n///    cursor          : pointer       ;\n///    border          : none          ;\n///    text-decoration : none          ;\n///    margin-right    : 1rem          ;\n///    margin-left     : 1rem          ;\n///    border-radius   : 1rem          ;\n/// }\n\n@mixin radius{\n    border-radius:1rem;\n}\n\n@mixin buttonCss($Gap){\n    .#{$nameSpace}-button{\n        @include button($Gap);\n\n        &-radius{\n            @include radius;\n        }\n    }\n}\n","/// Mixin para crear las Media Querys para tu proyecto\n/// @group   Layout\n/// @require {map} $Breackpoint\n/// @param   {map} $Breackpoint - Variable para optener un valor del mapa $Breackpoints\n/// @example scss\n///\n/// .container{\n///     color:red;\n///     @include MediaQuery(xs){\n///         color:blue;\n////    }\n/// }\n///\n/// @example css\n///\n/// .container{\n///    color:red;\n/// }\n///\n/// @media screen and (min-width:240px){\n///     color:blue;\n/// }\n\n\n@mixin MediaQuery($Breackpoint){\n    @if map-has-key($Breackpoints,$Breackpoint){\n        @if $Breackpoint == xs{\n            @content;\n        }@else{\n            @media screen and (min-width:#{map-get($Breackpoints,$Breackpoint)}){\n                @content;\n            }\n        }\n    }\n}\n","/// Mixin para la creacion de un sistema de rejillas\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   grid\n/// @require {number} $Column\n/// @param   {number} $Column[12] - Varible para determinar el numero de columnas\n/// @example scss\n///\n/// .container{\n///     @include gridStrict(12);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-grid-columns: (1fr)[12];\n///     grid-template-columns: repeat(12, 1fr);\n/// }\n\n@mixin gridStrict($Column){\n    grid-template-columns   :repeat($Column , 1fr);\n}\n\n@mixin gridStrictCss($Breackpoint,$Column){\n    @include MediaQuery($Breackpoint){\n        .#{$nameSpace}-Grid-#{$Breackpoint}{\n            @if $Breackpoint == xs{\n                grid-template-columns:minmax(220px, 1fr);\n            }@else if $Breackpoint == s{\n                grid-template-columns:repeat(2,minmax(1fr,220px));\n            }@else if $Breackpoint == m{\n                grid-template-columns:repeat(4,minmax(1fr,220px));\n            }@else if $Breackpoint == st{\n                grid-template-columns:repeat(6,minmax(1fr,220px));\n            }@else if $Breackpoint == t{\n                grid-template-columns:repeat(8,minmax(1fr,220px));\n            }@else if $Breackpoint == l{\n                grid-template-columns:repeat(10,minmax(1fr,220px));\n            }@else if $Breackpoint == xl{\n                grid-template-columns:repeat(12,1fr);\n            }\n        }\n    }\n}\n\n/// Mixin para la separacion de los items en la rejilla\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   grid\n/// @require {number} $Gap-Column\n/// @param   {number} $Gap-Column[1rem] - Varible para determinar la separacion de las columnas\n/// @require {number} $Gap-Row\n/// @param   {number} $Gap-Row[1rem] - Varible para determinar la separacion de las filas\n/// @example scss\n///\n/// .container{\n///     @include gap($Gap-Column,$Gap-Row);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-grid-columns: (1fr)[12];\n///     grid-template-columns: repeat(12, 1fr);\n/// }\n\n@mixin gap($Gap-Column,$Gap-Row){\n    grid-gap:$Gap-Column $Gap-Row;\n}\n\n\n@mixin gapCss($Breackpoint,$Gap-Column,$Gap-Row){\n    @include MediaQuery($Breackpoint){\n        .#{$Breackpoint}-gap{\n            @if $Breackpoint == xs{\n                grid-gap:0;\n            }@else if $Breackpoint == s or $Breackpoint == m or $Breackpoint == st or $Breackpoint == t or $Breackpoint == l or $Breackpoint == xl {\n                grid-gap:$Gap-Column $Gap-Row;\n            }\n        }\n    }\n}\n","@import \"node_modules/@andresarronamontoya/arronagrid/ArronaGrid.scss\";\r\n\r\n*,*:after,*:before{\r\n    padding: 0;\r\n    overflow-y:auto;\r\n}\r\n\r\nheader{\r\n    width:100%;\r\n    overflow-x:none;\r\n}\r\n\r\na{\r\n    font-size:1.3rem;\r\n    color:#ffffff;\r\n}\r\n\r\nh1,h2,h3{\r\n    margin-bottom:1rem;\r\n    padding-bottom:0.5rem;\r\n}\r\n\r\nh1{\r\n    font-size:3.2rem;\r\n    color:#E46767;\r\n    border-bottom:4px solid #B35A86;\r\n    padding-left:2rem;\r\n    margin:2.5rem 0;\r\n}\r\n\r\nh2{\r\n    font-size:2.67rem;\r\n    color:#B35A86;\r\n    padding-left:4rem;\r\n    margin:2rem 0;\r\n}\r\n\r\nh3{\r\n    font-size:2.14rem;\r\n    padding-left:6rem;\r\n    margin:1.5rem 0;\r\n}\r\n\r\nh4{\r\n    font-size:1.61rem;\r\n    padding-left:8rem;\r\n    margin:1rem 0;\r\n}\r\n\r\nh4[class=\"sass\"]{\r\n    color:#CD6799;\r\n}\r\n\r\nh4[class=\"css\"]{\r\n    color:#3C99DC;\r\n}\r\n\r\nh5{\r\n    font-size:1.18rem;\r\n    padding-left:10rem;\r\n    margin:0.5rem 0;\r\n}\r\n\r\n.header-main{\r\n    height:3rem;\r\n    background-color: #CD6799;\r\n    grid-column:1/2;\r\n    grid-row:1/2;\r\n\r\n    @media screen and (min-width:768px){\r\n        height: 4rem;\r\n        grid-column:2/9;\r\n        grid-row:1/2;\r\n    }\r\n\r\n    .Descargar{\r\n        background-color: #4D273A;\r\n    }\r\n}\r\n\r\naside{\r\n    width:16.3%;\r\n    background-color: #343EE9;\r\n    height:100vh; \r\n    position:fixed; \r\n    @media screen and (min-width:768px){\r\n        grid-column:1/2;\r\n        grid-row:1/4;\r\n    }\r\n}\r\n\r\nmain{\r\n    @media screen and (min-width:768px){\r\n        height: auto;\r\n        grid-column:2/9;\r\n        grid-row:2/3;\r\n    }\r\n}\r\n\r\narticle{\r\n    margin:1rem 0;\r\n}\r\n\r\np{\r\n    font-size:1.4rem;\r\n    margin:0.3rem 0;\r\n}\r\n\r\ni{\r\n    font-size:1rem;\r\n    margin:0.1rem 0;\r\n}\r\n\r\np[class=\"compila\"]{\r\n    font-size:1.6rem;\r\n    margin:1rem 0;\r\n}\r\n\r\ntable{\r\n    width:1000px;\r\n    margin:1.2rem 0;\r\n}\r\n\r\nthead tr th{\r\n    color:#8D8D8D;\r\n    padding-bottom:1rem;\r\n    border-bottom:3px solid #8D8D8D;\r\n}\r\n\r\nth{\r\n    font-size:1.5em;\r\n    text-align: left;\r\n    padding:0.8rem 0;\r\n}\r\n\r\ncode{\r\n    font-size:1rem;\r\n}\r\n\r\nfooter{\r\n    background-color:#19405C;\r\n    color: #ffffff;\r\n    font-size:1.1em;\r\n    height:6rem;\r\n    text-align: center;\r\n    @media screen and (min-width:768px){\r\n        height: 4rem;\r\n        grid-column:2/9;\r\n        grid-row:3/4;\r\n    }\r\n\r\n    & p:nth-child(1){\r\n        margin: 0;\r\n        flex-basis:100%;\r\n        height:60%;\r\n    }\r\n\r\n    & p:nth-child(2){\r\n        margin: 0;\r\n        flex-basis:100%;\r\n        height:40%;\r\n        background-color: #4D273A;\r\n    }\r\n}\r\n\r\n.banner{\r\n    background-color:#19405C;\r\n    height:60vh;\r\n\r\n    & h1,& p{\r\n        color:#ffffff\r\n    }\r\n\r\n    & h1{\r\n        border-bottom:0px;\r\n    }\r\n}\r\n\r\n.buttons{\r\n    position: absolute;\r\n    top:58vh;\r\n}\r\n\r\na.Descargar{\r\n    background-color: #CD6799;\r\n    text-decoration:none;\r\n}\r\n\r\na.github{\r\n    background-color: #000000;\r\n    text-decoration:none;\r\n}\r\n\r\n.desripcion{\r\n    height:80vh;\r\n\r\n    & div{\r\n        height:100%;\r\n        flex-basis:33%;\r\n    }\r\n}\r\n\r\n.name h1{\r\n    margin: 0;\r\n    padding-bottom:0;\r\n    color:#ffffff;\r\n    border:0;\r\n}\r\n\r\n.name:hover{\r\n    text-decoration:none;\r\n}\r\n"]}