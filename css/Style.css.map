{"version":3,"sources":["node_modules/@andresarronamontoya/arronagrid/sass/_base.scss","node_modules/@andresarronamontoya/arronagrid/sass/_core.scss","node_modules/@andresarronamontoya/arronagrid/sass/_flexbox.scss","node_modules/@andresarronamontoya/arronagrid/ArronaGrid.scss","node_modules/@andresarronamontoya/arronagrid/sass/_helps.scss","node_modules/@andresarronamontoya/arronagrid/sass/_buttons.scss","node_modules/@andresarronamontoya/arronagrid/sass/_mediaQuery.scss","node_modules/@andresarronamontoya/arronagrid/sass/_grid.scss","Style.scss"],"names":[],"mappings":"AAAA,iBACI,2BAAA,AAAqB,sBAAA,AACrB,SAAS,AAET,kBADA,AACkB,8BADlB,AAAqB,0BAArB,AAAqB,qBAAA,CAExB,AAED,IAEI,YADA,AACY,cADG,CAElB,AAED,EACI,oBAAqB,CAIxB,AALD,QAGQ,yBAA0B,CAC7B,ACkBD,gBAVI,oBAAA,AAAkB,aAAA,ACiDlB,mBAAA,AAAU,cAAA,CDrCb,AAFD,gBAPI,iBAAA,AAAkB,YAAA,CASrB,AAsCD,mBAlDI,oBAAA,AAAkB,aAAA,ACiDlB,mBAAA,AAAU,cAAA,CDGb,AAFD,sCAPA,iBAA4B,AAC5B,kBAFA,AAE4B,iBE1CZ,AF2ChB,UAA4B,CAK5B,AAEC,mBAjDG,iBAAA,AAAkB,YAAA,CAiDrB,AGrED,MACI,cD4BgB,CC3BnB,AARD,aACI,eD6BiB,CC5BpB,AC0DD,WAlCA,YADA,AACgC,eAHhC,AAEgC,qBAFA,AAMhC,iBADA,AFiBY,kBErBZ,AFqBY,mBErBoB,AAGhC,oBAAgC,CAuC/B,AAHG,kBAPJ,kBAAkB,CASb,AH7BG,WACI,0BAAA,AAAe,qBAAA,CAClB,AAFD,YACI,kCAAA,AAAe,6BAAA,CAClB,AAFD,WACI,uBAAA,AAAe,kBAAA,CAClB,AAFD,YACI,+BAAA,AAAe,0BAAA,CAClB,AIVD,oCJQA,UACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,oCJQA,UACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AIVD,oCJQA,UACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,oCJQA,UACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AIVD,oCJQA,WACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,oCJQA,YACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,oCJQA,WACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,oCJQA,YACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AIVD,oCJQA,UACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,oCJQA,UACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,oCJQA,WACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AIVD,qCJQA,UACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,qCJQA,WACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,qCJQA,UACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,qCJQA,WACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AIVD,qCJQA,WACI,0BAAA,AAAe,qBAAA,CAClB,CAAA,AIVD,qCJQA,YACI,kCAAA,AAAe,6BAAA,CAClB,CAAA,AIVD,qCJQA,WACI,uBAAA,AAAe,kBAAA,CAClB,CAAA,AIVD,qCJQA,YACI,+BAAA,AAAe,0BAAA,CAClB,CAAA,AAyCD,WACI,mBAAA,AAAU,cAAA,CACb,AAFD,YACI,2BAAA,AAAU,sBAAA,CACb,AAFD,YACI,qBAAA,AAAU,gBAAA,CACb,AIrDD,oCJmDA,UACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AIrDD,oCJmDA,UACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,oCJmDA,YACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,oCJmDA,YACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AIrDD,oCJmDA,UACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,oCJmDA,WACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AIrDD,qCJmDA,UACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,qCJmDA,WACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,qCJmDA,WACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AIrDD,qCJmDA,WACI,mBAAA,AAAU,cAAA,CACb,CAAA,AIrDD,qCJmDA,YACI,2BAAA,AAAU,sBAAA,CACb,CAAA,AIrDD,qCJmDA,YACI,qBAAA,AAAU,gBAAA,CACb,CAAA,AAsEO,iBACI,sBAAA,AAAgB,6BAAA,CACnB,AAFD,oBACI,yBAAA,AAAgB,4BAAA,CACnB,AAFD,eACI,oBAAA,AAAgB,0BAAA,CACnB,AAFD,gBACI,qBAAA,AAAgB,sBAAA,CACnB,AAFD,aACI,kBAAA,AAAgB,wBAAA,CACnB,AAOG,gBAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,AAHD,iBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,AAHD,cAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,AAUD,gBAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,AItJb,oCJ2HQ,gBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,mBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,cACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,eACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,oCJ2HQ,YACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,oCJoIY,eAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,oCJoIY,gBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,oCJoIY,aAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,oCJiJY,eAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AItJb,oCJ2HQ,gBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,mBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,cACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,eACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,oCJ2HQ,YACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,oCJoIY,eAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,oCJoIY,gBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,oCJoIY,aAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,oCJiJY,eAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AItJb,oCJ2HQ,iBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,oBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,eACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,gBACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,oCJ2HQ,aACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,oCJoIY,gBAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,oCJoIY,iBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,oCJoIY,cAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,oCJiJY,gBAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AItJb,oCJ2HQ,gBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,mBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,cACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,oCJ2HQ,eACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,oCJ2HQ,YACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,oCJoIY,eAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,oCJoIY,gBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,oCJoIY,aAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,oCJiJY,eAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AItJb,qCJ2HQ,gBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,mBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,cACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,eACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,qCJ2HQ,YACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,qCJoIY,eAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,qCJoIY,gBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,qCJoIY,aAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,qCJiJY,eAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AItJb,qCJ2HQ,iBACI,sBAAA,AAAgB,6BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,oBACI,yBAAA,AAAgB,4BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,eACI,oBAAA,AAAgB,0BAAA,CACnB,CAAA,AI7HT,qCJ2HQ,gBACI,qBAAA,AAAgB,sBAAA,CACnB,CAAA,AI7HT,qCJ2HQ,aACI,kBAAA,AAAgB,wBAAA,CACnB,CAAA,AI7HT,qCJoIY,gBAEI,yBAAA,AAAc,yBADd,AACc,qBADd,AAAY,sBAAA,CAEf,CAAA,AIvIb,qCJoIY,iBAEI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,kBAAA,CAEf,CAAA,AIvIb,qCJoIY,cAEI,uBAAA,AAAc,uBADd,AACc,mBADd,AAAY,oBAAA,CAEf,CAAA,AIvIb,qCJiJY,gBAGI,0BAAA,AAAc,qBADd,AACc,sBADd,AAAY,mBADZ,AACY,qBADZ,AAAgB,uBAAA,AAGhB,iBAAiB,CACpB,CAAA,AK3JjB,YAEQ,mCAAA,AAAwC,uCAAA,CAc/C,ADXG,oCCLJ,WAIQ,0BAAA,AAAmC,mCAAA,CAY1C,CAAA,ADXG,oCCLJ,WAMQ,0BAAA,AAAmC,mCAAA,CAU1C,CAAA,ADXG,oCCLJ,YAQQ,0BAAA,AAAmC,mCAAA,CAQ1C,CAAA,ADXG,oCCLJ,WAUQ,0BAAA,AAAmC,mCAAA,CAM1C,CAAA,ADXG,qCCLJ,WAYQ,2BAAA,AAAoC,oCAAA,CAI3C,CAAA,ADXG,qCCLJ,YAcQ,2BAAA,AAAoC,oCAAA,CAE3C,CAAA,AA+BD,QAEQ,UAAU,CAIjB,ADhDG,oCC0CJ,OAIQ,kBJ7BA,CI+BP,CAAA,ADhDG,oCC0CJ,OAIQ,kBJ7BA,CI+BP,CAAA,ADhDG,oCC0CJ,QAIQ,kBJ7BA,CI+BP,CAAA,ADhDG,oCC0CJ,OAIQ,kBJ7BA,CI+BP,CAAA,ADhDG,qCC0CJ,OAIQ,kBJ7BA,CI+BP,CAAA,ADhDG,qCC0CJ,QAIQ,kBJ7BA,CI+BP,CAAA,AC1ET,MACI,cAAS,AAST,eARA,AAQU,iBARD,AACT,iBAAS,AACT,iBAAS,AACT,iBAAS,AACT,iBAAS,AACT,iBAAS,AACT,iBAAS,AACT,gBAAS,CAEZ,AAED,iBAEI,gBADA,AACe,SADL,CAEb,AAED,OACI,UAAU,CACb,AAED,EAEI,oBADA,AACmB,gBADH,CAEnB,AAED,SACI,mBAAkB,AAClB,oBAAqB,CACxB,AAED,eACI,cAAc,CACjB,AAED,GAGI,sCADA,AACqC,oBAFrC,AACmB,iBADH,AAGhB,eAAe,CAKlB,AAJG,oCALJ,GAOQ,iBADA,AACgB,iBADC,CAGxB,CAAA,AAED,GAEI,oBADA,AACmB,kBADF,AAEjB,aAAa,CAKhB,AAJG,oCAJJ,GAMQ,kBADA,AACiB,iBADA,CAGxB,CAAA,AAED,GACI,kBAAiB,AACjB,eAAe,CAKlB,AAJG,oCAHJ,GAKQ,kBADA,AACiB,iBADA,CAGxB,CAAA,AAED,GACI,iBAAgB,AAChB,aAAa,CAKhB,AAJG,oCAHJ,GAKQ,kBADA,AACiB,iBADA,CAGxB,CAAA,AAED,eACI,mBAAmB,CACtB,AAED,cACI,mBAAmB,CACtB,AAED,GACI,iBAAgB,AAChB,cAAe,CAKlB,AAJG,oCAHJ,GAIQ,kBAAiB,AACjB,kBAAkB,CAEzB,CAAA,AAED,aAEI,+BAA+B,AAC/B,kBAAA,AAAe,uBAAf,AAAe,gBAAA,AACf,eAAA,AAAY,oBAAZ,AAAY,aAHZ,AAGY,WAHD,CAkBd,AAbG,oCANJ,aAQQ,kBAAA,AAAe,uBAAf,AAAe,gBAAA,AACf,eAAA,AAAY,oBAAZ,AAAY,aAFZ,AAEY,WAFA,CAYnB,CAAA,AAnBD,wBAaQ,+BAA+B,AAC/B,YAAa,CAIhB,AAHG,oCAfR,wBAgBY,oBAAqB,CAE5B,CAAA,AAGL,OACI,oBAAmB,AACnB,eAAc,AACd,iBAAkB,CACrB,AAED,OAGI,+BAFA,AAE+B,aAFlB,AAGb,aAAY,AACZ,eAAc,AACd,SAJA,AAIQ,UAJC,AAKT,UAAU,CAQb,AAPG,oCARJ,OASQ,cAAc,AAEd,kBAAA,AAAe,uBAAf,AAAe,gBAAA,AACf,eAAA,AAAY,oBAAZ,AAAY,aAAA,AACZ,MAHA,AAGK,WAHM,CAKlB,CAAA,AAED,KACI,WAAY,CAMf,AALG,oCAFJ,KAIQ,kBAAA,AAAe,uBAAf,AAAe,gBAAA,AACf,eAAA,AAAY,oBAAZ,AAAY,aAFZ,AAEY,WAFA,CAInB,CAAA,AAED,WACI,aAAc,CAIjB,AAHG,oCAFJ,WAGQ,YAAa,CAEpB,CAAA,AAED,kBAEI,aADA,AACa,iCADb,AAAyB,wBAAA,CAK5B,AAHG,oCAHJ,kBAIQ,aAAc,CAErB,CAAA,AAED,oBAEI,oBADA,AACmB,eADL,AAEd,cAAe,CAClB,AAED,QACI,aAAa,CAChB,AAED,EACI,cAAa,AACb,cAAe,CAIlB,AAHG,oCAHJ,EAIQ,gBAAgB,CAEvB,CAAA,AAED,EACI,eAAe,AACf,cAAe,CAIlB,AAHG,oCAHJ,EAIQ,cAAc,CAErB,CAAA,AAED,iBACI,eAAc,AACd,aAAa,CAIhB,AAHG,oCAHJ,iBAIQ,gBAAgB,CAEvB,CAAA,AAED,MAEI,gBADA,AACe,UADJ,CAKd,AAHG,oCAHJ,MAIQ,YAAY,CAEnB,CAAA,AAED,YAGI,sCAFA,AAEqC,oBAFlB,AACnB,mBAAmB,CAEtB,AAED,GACI,eAAe,AAEf,gBADA,AACgB,eADA,CAKnB,AAHG,oCAJJ,GAKQ,eAAe,CAEtB,CAAA,AAED,KACI,cAAc,CACjB,AAED,OACI,+BAA8B,AAC9B,oBAAoB,AACpB,aAAY,AACZ,iBAAkB,CAqBrB,AApBG,oCALJ,OAOQ,kBAAA,AAAe,uBAAf,AAAe,gBAAA,AACf,eAAA,AAAY,oBAAZ,AAAY,aAFZ,AAEY,WAFA,CAmBnB,CAAA,AAzBD,2CAcQ,6BAAA,AAAe,gBAFf,AAEe,iBAFC,AAGhB,YAFA,AAEW,QAFF,CAbjB,AAwBK,sBADG,8BAA+B,CAClC,AAGL,QACI,+BAA8B,AAC9B,YAAY,CAkBf,AApBD,qBAKQ,mBAAmB,CACtB,AANL,WAUQ,gBADA,AACiB,iBADD,AAEhB,cAAc,CAIjB,AAHG,oCAZR,WAaY,gBAAgB,CAEvB,CAAA,AAED,oCAjBJ,QAkBQ,WAAW,CAElB,CAAA,AAED,SACI,kBAAkB,AAClB,QAAQ,CAIX,AAHG,oCAHJ,SAIQ,QAAQ,CAEf,CAAA,AAED,YAGI,+BADA,AAC+B,kBADb,AAElB,qBAHA,AAGoB,SAHX,CAOZ,AAHG,oCALJ,YAMQ,WAAW,CAElB,CAAA,AAED,SAGI,gCADA,AACgC,kBADd,AAElB,qBAHA,AAGoB,SAHX,CAOZ,AAHG,oCALJ,SAMQ,WAAW,CAElB,CAAA,AAED,aAEI,YADA,AACW,UADD,CAoBb,AAlBG,oCAHJ,aAIQ,WAAW,CAiBlB,CAAA,AArBD,iBAOQ,WAAW,CAad,AAZG,oCARR,iBASY,4BAAA,AAAc,cAAA,CAWrB,CAAA,AApBL,oBAaY,eAAc,AACd,cAAc,CAKjB,AAHG,oCAhBZ,oBAiBgB,iBAAiB,CAExB,CAAA,AAIT,SAKI,SADA,AACQ,oBADW,AAEnB,eALA,AAKc,uBALU,AACxB,iBAAgB,AAChB,iBAAiB,CAOpB,AAHG,oCAPJ,SAQQ,cAAc,CAErB,CAAA,AAED,YACI,oBAAoB,CACvB,AAMD,gBACI,WAAW,CACd,AAED,SAGI,+BAFA,AAE8B,aAFjB,AACb,6BAAA,AAAe,gBAAA,AAEf,kCAAmC,CAItC,AAHG,oCALJ,SAMQ,aAAc,CAErB,CAAA,AAED,YAEI,iBADA,AACgB,eADA,CAEnB,AAED,eACI,iBAAgB,AAEhB,0BAAiB,CACpB,AAED,SAEQ,sBAAA,AAAa,aAAA,CAChB","file":"Style.css","sourcesContent":["*,*:before,*:after{\n    box-sizing:border-box;\n    margin: 0;\n    text-size-adjust:100%;\n    overflow-y: hidden;\n}\n\nimg{\n    min-width: 100%;\n    height: auto;\n}\n\na{\n    text-decoration: none;\n    &:hover{\n        text-decoration: underline;\n    }\n}\n","/// Mixin para determinar el modelo de Layout.\n/// @group   Layout\n/// @require {boolean} $Display\n/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]\n///\n/// @example scss\n///\n/// .container{\n///     @include Layout(flex);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     display: -ms-flexbox;\n///     display: flex;\n///     -ms-flex-wrap: wrap;\n///     flex-wrap: wrap;\n/// }\n\n\n\n@mixin Layout($Display){\n    @if $Display == flex{\n        display     : flex;\n        @include wrap(w);\n    }@else if $Display == grid{\n        display     : grid;\n    }@else{\n        @warn \"Error valor no permitido\";\n    }\n}\n\n@mixin LayoutCss($Display){\n    .#{$nameSpace}-layout-#{$Display}{\n        @include Layout($Display);\n    }\n}\n\n/// Mixin para la creacion de un ag-container.\n/// @group   Layout\n/// @require {boolean} $Display\n/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]\n///\n/// @example scss\n///\n/// .container{\n///     @include container(flex);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     max-width: 1200px;\n///     margin-left: auto;\n///     margin-right: auto;\n///     width: 100%;\n///     display: -ms-flexbox;\n///     display: flex;\n///     -ms-flex-wrap: wrap;\n///     flex-wrap: wrap;\n/// }\n///\n\n\n@mixin container($Display){\n    max-width       : $Max-Width;\n    margin-left     : auto      ;\n    margin-right    : auto      ;\n    width           : 100%      ;\n    @include Layout($Display)   ;\n}\n\n@mixin containerCss($Display){\n    .#{$Container}-#{$Display}{\n        @include container($Display);\n    }\n}\n\n\n","/// Mapa de variables para el mixin direccion()\n/// @group   Flexbox\n\n$FlexDirection:(\n    c   :   column,\n    cr  :   column-reverse,\n    r   :   row,\n    rr  :   row-reverse\n) !default;\n\n/// Mixin para determinar la direccion de los items\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Direccion\n/// @param   {map} $Direccion - Variable para optener un valor del mapa $FlexDirection\n/// @example scss\n///\n/// .container{\n///     @include direccion(c);\n/// }\n///\n/// @example css\n///\n/// .container{\n///    -ms-flex-direction: column;\n///    flex-direction: column;\n/// }\n\n@mixin direccion($Direccion){\n    @if map-has-key($FlexDirection,$Direccion){\n        flex-direction:#{map-get($FlexDirection,$Direccion)};\n    }\n}\n\n@mixin direccionCss($Direccion,$Breackpoint){\n    @if map-has-key($FlexDirection,$Direccion){\n        @include MediaQuery($Breackpoint){\n            .#{$Breackpoint}-flex-#{$Direccion}{\n                flex-direction:#{map-get($FlexDirection,$Direccion)};\n            }\n        }\n    }\n}\n\n/// Mapa de variables para el mixin wrap()\n/// @group   Flexbox\n\n$FlexWrap:(\n    w   :wrap,\n    wr  :wrap-reverse,\n    nw  :nowrap\n) !default;\n\n/// Mixin para determinar si los items estaran en una linea o no\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Wrap\n/// @param   {map} $Wrap - Variable para optener un valor del mapa $FlexWrap\n/// @example scss\n///\n/// .container{\n///     @include wrap(w);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-flex-wrap:wrap-reverse;\n///     flex-wrap:wrap-reverse\n/// }\n\n@mixin wrap($Wrap){\n    @if map-has-key($FlexWrap,$Wrap){\n        flex-wrap:#{map-get($FlexWrap,$Wrap)};\n    }\n}\n\n@mixin wrapCss($Wrap,$Breackpoint){\n    @if map-has-key($FlexWrap,$Wrap){\n        @include MediaQuery($Breackpoint){\n            .#{$Breackpoint}-flex-#{$Wrap}{\n                flex-wrap:#{map-get($FlexWrap,$Wrap)};\n            }\n        }\n    }\n}\n\n/// Mapa de variables para el mixin Align()\n/// @group   Flexbox\n\n$FlexAlign :(\n    Justify     :space-between,\n    Distribute  :space-around,\n    Start       :flex-start,\n    Center      :center,\n    End         :flex-end\n)!default;\n\n/// Mapa de variables para el mixin Align()\n/// @group   Flexbox\n\n$FlexAxis :(\n    cross   :cross,  //Si los items se alinearan al eje cross\n    main    :main,   //Si los items se alinearan al eje main\n    axis    :flex    //Si los items se alinearan en los 2 ejes\n)!default;\n\n/// Mixin para la alineacion de los items en el main axis o cross axis\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   Flexbox\n/// @require {map} $Wrap\n/// @param   {map} $Axis  - Variable para optener un valor del mapa $FlexAxis\n/// @param   {map} $Align - Variable para optener un valor del mapa $FlexAlign\n/// @example scss\n///\n/// .container{\n///     @include Align(cross,Justify);\n/// }\n///\n/// @example css\n///\n/// .container{\n///   -ms-flex-pack: justify;\n///   justify-content: space-between;\n/// }\n\n@mixin Align($Axis,$Align){\n    @if map-has-key($FlexAxis,$Axis){\n        @if $Axis == main{\n            @if map-has-key($FlexAlign,$Align){\n                justify-content:#{map-get($FlexAlign,$Align)};\n            }\n        }@else if $Axis == cross{\n            @if map-has-key($FlexAlign,$Align){\n                @if $Align == Start or $Align == Center or $Align == End{\n                    align-items:#{map-get($FlexAlign,$Align)};\n                    align-content:#{map-get($FlexAlign,$Align)};\n                }@else{\n                    @warn \"Error valor no permitido\";\n                }\n            }\n        }@else if $Axis == axis{\n            @warn \"Valor no valido para la version sass\";\n        }\n    }\n}\n\n@mixin AlignCss($Axis,$Align,$Breackpoint){\n    @if map-has-key($FlexAxis,$Axis){\n        @if $Axis == main{\n            @if map-has-key($FlexAlign,$Align){\n                @include MediaQuery($Breackpoint){\n                    .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                        justify-content:#{map-get($FlexAlign,$Align)};\n                    }\n                }\n            }\n        }@else if $Axis == cross{\n            @if map-has-key($FlexAxis,$Axis){\n                @include MediaQuery($Breackpoint){\n                    @if $Align == Start or $Align == Center or $Align == End{\n                        .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                            align-items:#{map-get($FlexAlign,$Align)};\n                            align-content:#{map-get($FlexAlign,$Align)};\n                        }\n                    }@else{\n                        @warn \"Error valor no permitido\";\n                    }\n                }\n            }\n        }@else if $Axis == axis{\n            @if map-has-key($FlexAlign,$Align){\n                @include MediaQuery($Breackpoint){\n                    @if $Align == Center{\n                        .#{$Breackpoint}-#{$Axis}-#{$Align}{\n                            justify-content:#{map-get($FlexAlign,$Align)};\n                            align-items:#{map-get($FlexAlign,$Align)};\n                            align-content:#{map-get($FlexAlign,$Align)};\n                            text-align:center;\n                        }\n                    }@else{\n                        @warn \"Error valor no permitido\";\n                    }\n                }\n            }\n        }\n    }\n}\n","/// ArronaGrid es una libreria sass para la maquetacion de sitios web contruida con la especificacion css flexbox\n/// Importe el achivo ArronaGrid.scss en su proyecto para empezar usarlo\n\n/// Compila todo el core correspondiente.\n/// Acepta 2 valores sass(por defecto y recomendado) y css.\n/// @group Variables Globales\n\n$Core   :scss !default;\n\n/// Soporte para caracteristicas css.\n/// Acepta 3 valores all(por defecto), grid, beta.\n/// @group Variables Globales\n\n$Version :all !default;\n\n/// Selectores para el container y el item\n/// puedes modificarlos de acuerdo a las necesidaes del tu proyecto\n/// @group Variables Globales\n\n$nameSpace  : ag                       !default;\n$Container  : #{$nameSpace}-container  !default;\n$Item       : #{$nameSpace}-item       !default;\n\n/// Ancho maximo para los contenedores\n/// @group   Layout\n\n$Max-Width  : 1200px    !default;\n\n/// Variable para sobreescribir la propiedad max-width en base al viewport\n/// @group   Layout\n\n$FullLayout       : 100vh     !default;\n\n/// Variable para sobreescribir la propiedad max-width en base a un contenedor\n/// @group   Layout\n\n$Full             : 100%      !default;\n\n/// Variables para la creacion de una rejilla\n/// @group Grid\n\n$Column:12;\n\n/// Separacion entre los items\n/// @group Variables Globales\n\n$Gap       :1rem !default;\n\n/// Mapa de variables para el mixin MediaQuery()\n/// @group Layout\n\n$Breackpoints : (\n    xs: 240px,\n    s:  320px,\n    m:  480px,\n    st: 600px,\n    t:  768px,\n    l:  1024px,\n    xl: 1200px\n)   !default;\n\n@import \"sass/base.scss\";\n@import \"sass/buttons.scss\";\n@import \"sass/mediaQuery.scss\";\n@import \"sass/flexbox.scss\";\n@import \"sass/grid.scss\";\n@import \"sass/core.scss\";\n@import \"sass/helps.scss\";\n@import \"sass/corecss.scss\";\n","@mixin fullLayoutCss{\n    .Full-Layout{\n        max-width:$FullLayout;\n    }\n}\n\n@mixin fullCss{\n    .Full{\n        max-width:$Full;\n    }\n}\n","/// Mixin para la creacion de un ag-button.\n/// @group Bottons\n/// @require {number} $Gap\n/// @param   {number} $Gap[1rem] - Separacion entre elementos\n///\n/// @example scss\n///\n/// .button{\n///     @include button($Gap);\n/// }\n///\n/// @example css\n///\n/// .button{\n///    display         : inline-block  ;\n///    padding         : .8em 1.4em    ;\n///    cursor          : pointer       ;\n///    border          : none          ;\n///    text-decoration : none          ;\n///    margin-right    : 1rem          ;\n///    margin-left     : 1rem          ;\n/// }\n\n@mixin button($Gap) {\n    display         : inline-block  ;\n    padding         : .8em 1.4em    ;\n    cursor          : pointer       ;\n    border          : none          ;\n    text-decoration : none          ;\n    margin-right    : $Gap          ;\n    margin-left     : $Gap          ;\n}\n\n/// Mixin para redondear los bordes de un ag-button.\n/// @group Bottons\n///\n/// @example scss\n///\n/// .button{\n///     @include button($Gap);\n///     @include radius;\n/// }\n///\n/// @example css\n///\n/// .button{\n///    display         : inline-block  ;\n///    padding         : .8em 1.4em    ;\n///    cursor          : pointer       ;\n///    border          : none          ;\n///    text-decoration : none          ;\n///    margin-right    : 1rem          ;\n///    margin-left     : 1rem          ;\n///    border-radius   : 1rem          ;\n/// }\n\n@mixin radius{\n    border-radius:1rem;\n}\n\n@mixin buttonCss($Gap){\n    .#{$nameSpace}-button{\n        @include button($Gap);\n\n        &-radius{\n            @include radius;\n        }\n    }\n}\n","/// Mixin para crear las Media Querys para tu proyecto\n/// @group   Layout\n/// @require {map} $Breackpoint\n/// @param   {map} $Breackpoint - Variable para optener un valor del mapa $Breackpoints\n/// @example scss\n///\n/// .container{\n///     color:red;\n///     @include MediaQuery(xs){\n///         color:blue;\n////    }\n/// }\n///\n/// @example css\n///\n/// .container{\n///    color:red;\n/// }\n///\n/// @media screen and (min-width:240px){\n///     color:blue;\n/// }\n\n\n@mixin MediaQuery($Breackpoint){\n    @if map-has-key($Breackpoints,$Breackpoint){\n        @if $Breackpoint == xs{\n            @content;\n        }@else{\n            @media screen and (min-width:#{map-get($Breackpoints,$Breackpoint)}){\n                @content;\n            }\n        }\n    }\n}\n","/// Mixin para la creacion de un sistema de rejillas\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   grid\n/// @require {number} $Column\n/// @param   {number} $Column[12] - Varible para determinar el numero de columnas\n/// @example scss\n///\n/// .container{\n///     @include gridStrict(12);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-grid-columns: (1fr)[12];\n///     grid-template-columns: repeat(12, 1fr);\n/// }\n\n@mixin gridStrict($Column){\n    grid-template-columns   :repeat($Column , 1fr);\n}\n\n@mixin gridStrictCss($Breackpoint,$Column){\n    @include MediaQuery($Breackpoint){\n        .#{$nameSpace}-Grid-#{$Breackpoint}{\n            @if $Breackpoint == xs{\n                grid-template-columns:minmax(220px, 1fr);\n            }@else if $Breackpoint == s{\n                grid-template-columns:repeat(2,1fr);\n            }@else if $Breackpoint == m{\n                grid-template-columns:repeat(4,1fr);\n            }@else if $Breackpoint == st{\n                grid-template-columns:repeat(6,1fr);\n            }@else if $Breackpoint == t{\n                grid-template-columns:repeat(8,1fr)\n            }@else if $Breackpoint == l{\n                grid-template-columns:repeat(10,1fr);\n            }@else if $Breackpoint == xl{\n                grid-template-columns:repeat(12,1fr);\n            }\n        }\n    }\n}\n\n/// Mixin para la separacion de los items en la rejilla\n/// Se debe de aplicar al elemento que tenga el mixin Layout() o Container()\n/// @group   grid\n/// @require {number} $Gap-Column\n/// @param   {number} $Gap-Column[1rem] - Varible para determinar la separacion de las columnas\n/// @require {number} $Gap-Row\n/// @param   {number} $Gap-Row[1rem] - Varible para determinar la separacion de las filas\n/// @example scss\n///\n/// .container{\n///     @include gap($Gap-Column,$Gap-Row);\n/// }\n///\n/// @example css\n///\n/// .container{\n///     -ms-grid-columns: (1fr)[12];\n///     grid-template-columns: repeat(12, 1fr);\n/// }\n\n@mixin gap($Gap-Column,$Gap-Row){\n    grid-gap:$Gap-Column $Gap-Row;\n}\n\n\n@mixin gapCss($Breackpoint,$Gap-Column,$Gap-Row){\n    @include MediaQuery($Breackpoint){\n        .#{$Breackpoint}-gap{\n            @if $Breackpoint == xs{\n                grid-gap:0;\n            }@else if $Breackpoint == s or $Breackpoint == m or $Breackpoint == st or $Breackpoint == t or $Breackpoint == l or $Breackpoint == xl {\n                grid-gap:$Gap-Column $Gap-Row;\n            }\n        }\n    }\n}\n","$Core:css;\n@import \"node_modules/@andresarronamontoya/arronagrid/ArronaGrid.scss\";\n\n:root{\n    --color1:#ffffff;\n    --color2:#E46767;\n    --color3:#B35A86;\n    --color4:#CD6799;\n    --color5:#3C99DC;\n    --color6:#4D273A;\n    --color7:#343EE9;\n    --color8:#8D8D8D;\n    --color9:#19405C;\n    --color10:#000000;\n}\n\n*,*:after,*:before{\n    padding: 0;\n    overflow-y:auto;\n}\n\nheader{\n    width:100%;\n}\n\na{\n    font-size:1.3rem;\n    color:var(--color1);\n}\n\nh1,h2,h3{\n    margin-bottom:1rem;\n    padding-bottom:0.5rem;\n}\n\nh1,h2,h3,h4,h5{\n    padding-left:0;\n}\n\nh1{\n    font-size:2.5rem;\n    color:var(--color2);\n    border-bottom:4px solid var(--color3);\n    margin:2.5rem 0;\n    @media screen and (min-width:768px){\n        padding-left:2rem;\n        font-size:3.2rem;\n    }\n}\n\nh2{\n    font-size:1.97rem;\n    color:var(--color3);\n    margin:2rem 0;\n    @media screen and (min-width:768px){\n        padding-left:4rem;\n        font-size:2.67rem;\n    }\n}\n\nh3{\n    font-size:1.44rem;\n    margin:1.5rem 0;\n    @media screen and (min-width:768px){\n        padding-left:6rem;\n        font-size:2.14rem;\n    }\n}\n\nh4{\n    font-size:.91rem;\n    margin:1rem 0;\n    @media screen and (min-width:768px){\n        padding-left:8rem;\n        font-size:1.61rem;\n    }\n}\n\nh4[class=\"sass\"]{\n    color:var(--color4);\n}\n\nh4[class=\"css\"]{\n    color:var(--color5);\n}\n\nh5{\n    font-size:.48rem;\n    margin:0.5rem 0;\n    @media screen and (min-width:768px){\n        font-size:1.18rem;\n        padding-left:10rem;\n    }\n}\n\n.header-main{\n    height:3rem;\n    background-color: var(--color4);\n    grid-column:1/2;\n    grid-row:1/2;\n\n    @media screen and (min-width:768px){\n        height: 4rem;\n        grid-column:2/9;\n        grid-row:1/2;\n    }\n\n    .Descargar{\n        background-color: var(--color6);\n        display: none;\n        @media screen and (min-width:768px){\n            display: inline-block;\n        }\n    }\n}\n\n.icono{\n    color:var(--color1);\n    font-size:2rem;\n    margin-left:0.9rem;\n}\n\n.aside{\n    display: none;\n    width:75%;\n    background-color: var(--color7);\n    height:100vh;\n    position:fixed;\n    top:3rem;\n    z-index:10;\n    @media screen and (min-width:768px){\n        display: block;\n        width:12.5%;\n        grid-column:1/2;\n        grid-row:1/4;\n        top:0;\n    }\n}\n\nmain{\n    height: auto;\n    @media screen and (min-width:768px){\n        height: auto;\n        grid-column:2/9;\n        grid-row:2/3;\n    }\n}\n\n.icon-menu{\n    display: block;\n    @media screen and (min-width:768px){\n        display: none;\n    }\n}\n\n.icon-arrow-left2{\n    transform: rotate(180deg);\n    display: none;\n    @media screen and (min-width:768px){\n        display: block;\n    }\n}\n\n.icon-cheveron-down{\n    font-size:2rem;\n    color:var(--color1);\n    transition:0.4s;\n}\n\narticle{\n    margin:1rem 0;\n}\n\np{\n    font-size:1em;\n    margin:0.3rem 0;\n    @media screen and (min-width:768px){\n        font-size:1.4rem;\n    }\n}\n\ni{\n    font-size:0.7em;\n    margin:0.1rem 0;\n    @media screen and (min-width:768px){\n        font-size:1rem;\n    }\n}\n\np[class=\"compila\"]{\n    font-size:1rem;\n    margin:1rem 0;\n    @media screen and (min-width:768px){\n        font-size:1.6rem;\n    }\n}\n\ntable{\n    width: 100%;\n    margin:1.2rem 0;\n    @media screen and (min-width:768px){\n        width:1000px;\n    }\n}\n\nthead tr th{\n    color:var(--color8);\n    padding-bottom:1rem;\n    border-bottom:3px solid var(--color8);\n}\n\nth{\n    font-size:0.7em;\n    text-align: left;\n    padding:0.8rem 0;\n    @media screen and (min-width:768px){\n        font-size:1.5em;\n    }\n}\n\ncode{\n    font-size:1rem;\n}\n\nfooter{\n    background-color:var(--color9);\n    color: var(--color1);\n    height:14rem;\n    text-align: center;\n    @media screen and (min-width:768px){\n        height: 4rem;\n        grid-column:2/9;\n        grid-row:3/4;\n    }\n\n    & p:nth-child(1){\n        font-size:1.5rem;\n        margin: 0;\n        flex-basis:100%;\n        height:auto;\n    }\n\n    & p:nth-child(2){\n        font-size:1.5rem;\n        margin: 0;\n        flex-basis:100%;\n        height:auto;\n        background-color: var(--color6)\n    }\n}\n\n.banner{\n    background-color:var(--color9);\n    height:100vh;\n\n    & h1,& p{\n        color:var(--color1)\n    }\n\n    & h1{\n        font-size:2.2rem;\n        border-bottom:0px;\n        padding-left:0;\n        @media screen and (min-width:768px){\n            font-size:3.2rem;\n        }\n    }\n\n    @media screen and (min-width:768px){\n        height:60vh;\n    }\n}\n\n.buttons{\n    position: absolute;\n    top:80vh;\n    @media screen and (min-width:768px){\n        top:58vh;\n    }\n}\n\na.Descargar{\n    width:96%;\n    text-align: center;\n    background-color: var(--color4);\n    text-decoration:none;\n    @media screen and (min-width:768px){\n        width:250px;\n    }\n}\n\na.github{\n    width:96%;\n    text-align: center;\n    background-color: var(--color10);\n    text-decoration:none;\n    @media screen and (min-width:768px){\n        width:250px;\n    }\n}\n\n.descripcion{\n    width:100%;\n    height:auto;\n    @media screen and (min-width:768px){\n        height:35vh;\n    }\n    & div{\n        height:auto;\n        @media screen and (min-width:768px){\n            flex-basis:33%;\n        }\n\n        & h2{\n            font-size:2rem;\n            padding-left:0;\n\n            @media screen and (min-width:768px){\n                font-size:2.67rem;\n            }\n        }\n    }\n}\n\n.name h1{\n    margin:0 0.9rem 0 0.5rem;\n    padding-bottom:0;\n    text-align:center;\n    color:var(--color1);\n    border:0;\n    font-size:2rem;\n    @media screen and (min-width:240px){\n        padding-left:0;\n    }\n}\n\n.name:hover{\n    text-decoration:none;\n}\n\nsection{\n    height:auto;\n}\n\narticle{\n    height:auto;\n}\n\n.submenu{\n    display: none;\n    flex-basis:100%;\n    background-color:var(--color5);\n    transition:max-height 0.2s ease-out;\n    @media screen and (min-width:768px){\n        display: block;\n    }\n}\n\n.menu-items{\n    padding:0.5rem 0;\n    font-size:1.4rem;\n}\n\n.submenu-items{\n    font-size:1.2rem;\n    padding:0.3rem 0;\n    padding-left:1rem;\n}\n\n.menu{\n    li{\n        transform:10s;\n    }\n}\n"]}